var N=Object.defineProperty;var O=(s,t,i)=>t in s?N(s,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[t]=i;var n=(s,t,i)=>(O(s,typeof t!="symbol"?t+"":t,i),i);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const a of e)if(a.type==="childList")for(const c of a.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&r(c)}).observe(document,{childList:!0,subtree:!0});function i(e){const a={};return e.integrity&&(a.integrity=e.integrity),e.referrerPolicy&&(a.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?a.credentials="include":e.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function r(e){if(e.ep)return;e.ep=!0;const a=i(e);fetch(e.href,a)}})();const u={CANVAS_WIDTH:600,CANVAS_HEIGHT:650},o=u.CANVAS_WIDTH/3,l=50,x=100,A=3,p=50,w=100,E=800,R=1500,S=250;class P{constructor(t,i,r){n(this,"ctx");n(this,"canvas");n(this,"laneHeight");n(this,"speed");this.ctx=t,this.canvas=i,this.laneHeight=0,this.speed=r}draw(){this.ctx.fillStyle="#474747",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);const t=10,i=20,r=30;this.ctx.fillStyle="white";for(let e=1;e<A;e++){const a=e*o-t/2;for(let c=-r;c<this.canvas.height;c+=r+i)this.ctx.fillRect(a,c+this.laneHeight,t,r)}}update(){this.laneHeight+=this.speed,this.laneHeight>=50&&(this.laneHeight=0)}setSpeed(t){this.speed=t}}class V{constructor(t,i,r){n(this,"ctx");n(this,"lane");n(this,"x");n(this,"y");n(this,"targetLane");n(this,"animationProgress");n(this,"animationSpeed");n(this,"isAnimating");n(this,"img");this.ctx=t,this.lane=i,this.x=i*o+(o-l)/2,this.y=u.CANVAS_HEIGHT-x-20,this.targetLane=i,this.animationProgress=0,this.animationSpeed=.1,this.isAnimating=!1,this.img=new Image,this.img.src=r}drawCar(){this.isAnimating&&this.updateAnimation(),this.ctx.drawImage(this.img,59,260,150,284,this.x,this.y,l,x)}updateAnimation(){const t=this.lane*o+(o-l)/2,i=this.targetLane*o+(o-l)/2;this.x=t+(i-t)*this.animationProgress,this.animationProgress+=this.animationSpeed,this.animationProgress>=1&&(this.animationProgress=0,this.lane=this.targetLane,this.isAnimating=!1)}moveLeft(){this.lane>0&&(this.targetLane=this.lane-1,this.x=this.lane*o+(o-l)/2,this.isAnimating=!0)}moveRight(){this.lane<A-1&&(this.targetLane=this.lane+1,this.x=this.lane*o+(o-l)/2,this.isAnimating=!0)}}class G{constructor(t,i,r,e){n(this,"ctx");n(this,"lane");n(this,"x");n(this,"y");n(this,"speed");n(this,"img");this.ctx=t,this.lane=i,this.x=i*o+(o-p)/2,this.y=-w,this.speed=r,this.img=new Image,this.img.src=e}draw(){this.ctx.drawImage(this.img,59,260,150,284,this.x,this.y,p,w)}update(){this.y+=this.speed}isOffScreen(){return this.y>u.CANVAS_HEIGHT}drawScore(){this.ctx.fillStyle="white",this.ctx.font="14px Arial",this.ctx.fillText("+10",this.x+p/2-10,this.y-10)}setSpeed(t){this.speed=t}}function T(s,t){const i=Math.ceil(s),r=Math.floor(t);return Math.floor(Math.random()*(r-i)+i)}class M{constructor(t,i){n(this,"ctx");n(this,"score");n(this,"onScoreIncrement");this.ctx=t,this.score=0,this.onScoreIncrement=i}increment(){this.score+=10,this.onScoreIncrement()}draw(){this.ctx.fillStyle="white",this.ctx.font="20px Arial",this.ctx.fillText(`Score: ${this.score}`,10,30)}}const h=document.querySelector("#gameCanvas"),B=document.querySelector(".game-container"),f=h.getContext("2d"),_=document.querySelector("#startButton");h.height=u.CANVAS_HEIGHT;h.width=u.CANVAS_WIDTH;let g=2;const L=new P(f,h,g),y=new V(f,1,"Images/Car-Sprite.png"),C=new M(f,()=>{g+=.3,L.setSpeed(g),d.forEach(s=>s.setSpeed(g))}),d=[];let I=0;function v(){f.clearRect(0,0,h.width,h.height),f.fillStyle="black",f.fillRect(0,0,h.width,h.height),L.draw(),L.update(),y.drawCar();const s=performance.now();s-I>T(E,R)&&(D(),I=s),d.forEach((t,i)=>{t.update(),t.draw(),t.isOffScreen()&&(d.splice(i,1),C.increment()),F(y,t)&&W(),t.drawScore()}),C.draw(),requestAnimationFrame(v)}let H=0;function D(){const s=performance.now();if(s-H<E)return;const t=Array(A).fill(!0);d.forEach(e=>{e.y<S&&(t[e.lane]=!1)});const r=t.map((e,a)=>e?a:-1).filter(e=>e!==-1).filter(e=>{const a=e===0||t[e-1]&&d.every(m=>m.lane!==e-1||m.y>=S),c=e===A-1||t[e+1]&&d.every(m=>m.lane!==e+1||m.y>=S);return a&&c});if(r.length>0){const e=r[T(0,r.length)];d.push(new G(f,e,g,"Images/Car-Sprite.png")),H=s}}function F(s,t){return s.x<t.x+p&&s.x+l>t.x&&s.y<t.y+w&&s.y+x>t.y}function W(){alert(`Game Over! Your Final Score is ${C.score}`),window.location.reload()}function q(){_.style.display="none",B.style.display="flex",requestAnimationFrame(v)}_.addEventListener("click",q);window.addEventListener("keydown",s=>{switch(s.key){case"ArrowLeft":y.moveLeft();break;case"ArrowRight":y.moveRight();break}});
